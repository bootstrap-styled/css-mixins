import { defaultProps, listGroupItemVariant } from '../list-group';

describe('bootstrap list-group mixins', () => {
  it('listGroupItemVariant should return a css without hover media query', () => {
    const css = listGroupItemVariant(defaultProps['$enable-hover-media-query'], 'success', '#f00', '#0f0');
    expect(css).toContain('& .list-group-item-success {');
    expect(css).toContain('color: #0f0;');
    expect(css).toContain('background-color: #f00;');
    expect(css).toContain('}');
    expect(css).toContain('& a.list-group-item-success,');
    expect(css).toContain('button.list-group-item-success {');
    expect(css).toContain('color: #0f0;');
    expect(css).toContain('.list-group-item-heading {');
    expect(css).toContain('color: inherit;');
    expect(css).toContain('&:focus,');
    expect(css).toContain('&.focus,');
    expect(css).toContain('&:hover,');
    expect(css).toContain('&.hover {');
    expect(css).toContain('color: #0f0;');
    expect(css).toContain('background-color: hsl(0, 100%, 47.5%);');
    expect(css).toContain('&.active {');
    expect(css).toContain('&, ');
    expect(css).toContain('&:focus, ');
    expect(css).toContain('&.focus, ');
    expect(css).toContain('&:hover, ');
    expect(css).toContain('&.hover {');
    expect(css).toContain('color: #fff;');
    expect(css).toContain('background-color: #0f0;');
    expect(css).toContain('border-color: #0f0;');
  });
  it('listGroupItemVariant should return a css with hover media query', () => {
    const css = listGroupItemVariant(!defaultProps['$enable-hover-media-query'], 'success', '#f00', '#0f0');
    expect(css).toContain('& .list-group-item-success {');
    expect(css).toContain('color: #0f0;');
    expect(css).toContain('background-color: #f00;');
    expect(css).toContain('& a.list-group-item-success,');
    expect(css).toContain('button.list-group-item-success {');
    expect(css).toContain('color: #0f0;');
    expect(css).toContain('.list-group-item-heading {');
    expect(css).toContain('color: inherit;');
    expect(css).toContain('&:focus, &.focus { ');
    expect(css).toContain('color: #0f0;');
    expect(css).toContain('background-color: hsl(0, 100%, 47.5%);');
    expect(css).toContain('&:hover, &.hover { ');
    expect(css).toContain('color: #0f0;');
    expect(css).toContain('background-color: hsl(0, 100%, 47.5%);');
    expect(css).toContain('&.active {');
    expect(css).toContain('&, ');
    expect(css).toContain('&:focus, ');
    expect(css).toContain('&.focus {');
    expect(css).toContain('color: #fff;');
    expect(css).toContain('background-color: #0f0;');
    expect(css).toContain('border-color: #0f0;');
    expect(css).toContain('&:hover, &.hover { ');
    expect(css).toContain('color: #fff;');
    expect(css).toContain('background-color: #0f0;');
    expect(css).toContain('border-color: #0f0;');
  });
  it('listGroupItemVariant should return a css with hover media query', () => {
    const css = listGroupItemVariant(undefined, undefined, undefined);
    expect(css).toContain('& .list-group-item-undefined {');
    expect(css).toContain('color: undefined;');
    expect(css).toContain('background-color: undefined;');
    expect(css).toContain('}');
    expect(css).toContain('');
    expect(css).toContain('& a.list-group-item-undefined,');
    expect(css).toContain('button.list-group-item-undefined {');
    expect(css).toContain('color: undefined;');
    expect(css).toContain('');
    expect(css).toContain('.list-group-item-heading {');
    expect(css).toContain('color: inherit;');
    expect(css).toContain('}');
    expect(css).toContain('&:focus,');
    expect(css).toContain('&.focus,');
    expect(css).toContain('&:hover,');
    expect(css).toContain('&.hover {');
    expect(css).toContain('color: undefined;');
    expect(css).toContain('background-color: hsl(0, 0%, 0%);');
    expect(css).toContain('');
    expect(css).toContain('}');
    expect(css).toContain('&.active {');
    expect(css).toContain('');
    expect(css).toContain('&, ');
    expect(css).toContain('&:focus, ');
    expect(css).toContain('&.focus, ');
    expect(css).toContain('&:hover, ');
    expect(css).toContain('&.hover {');
    expect(css).toContain('color: #fff;');
    expect(css).toContain('background-color: undefined;');
    expect(css).toContain('border-color: undefined;');
  });
});
