import { defaultProps, buttonGroup } from '../buttonGroup';

describe('bootstrap buttonGroup utility', () => {
  it('should return a buttonGroup utility css', () => {
    const css = buttonGroup(
      defaultProps['$enable-shadows'],
      defaultProps['$enable-rounded'],
      defaultProps['$input-btn-border-width'],
      defaultProps['$btn-padding-x'],
      defaultProps['$btn-active-box-shadow'],
      defaultProps['$btn-padding-x-lg'],
      defaultProps['$btn-padding-y-lg'],
      defaultProps['$font-size-lg'],
      defaultProps['$btn-border-radius-lg'],
      defaultProps['$btn-padding-x-sm'],
      defaultProps['$btn-padding-y-sm'],
      defaultProps['$font-size-sm'],
      defaultProps['$btn-border-radius-sm']
    );
    expect(css).toContain('&.btn-group,');
    expect(css).toContain('& .btn-group,');
    expect(css).toContain('&.btn-group-vertical,');
    expect(css).toContain('& .btn-group-vertical {');
    expect(css).toContain('position: relative;');
    expect(css).toContain('display: inline-flex;');
    expect(css).toContain('vertical-align: middle; /* match .btn alignment given font-size hack above */');
    expect(css).toContain('> .btn {');
    expect(css).toContain('position: relative;');
    expect(css).toContain('flex: 0 1 auto;');
    expect(css).toContain('margin-bottom: 0;');
    expect(css).toContain('&:focus,');
    expect(css).toContain('&:active,');
    expect(css).toContain('&.active {');
    expect(css).toContain('z-index: 2;');
    expect(css).toContain('&:hover, &.hover { ');
    expect(css).toContain('z-index: 2;');
    expect(css).toContain('&.btn-group,');
    expect(css).toContain('& .btn-group {');
    expect(css).toContain('.btn + .btn,');
    expect(css).toContain('.btn + .btn-group,');
    expect(css).toContain('.btn-group + .btn,');
    expect(css).toContain('.btn-group + .btn-group {');
    expect(css).toContain('margin-left: -1px;');
    expect(css).toContain('/* Optional: Group multiple button groups together for a toolbar */');
    expect(css).toContain('&.btn-toolbar,');
    expect(css).toContain('& .btn-toolbar {');
    expect(css).toContain('display: flex;');
    expect(css).toContain('flex-wrap: wrap;');
    expect(css).toContain('justify-content: flex-start;');
    expect(css).toContain('.input-group {');
    expect(css).toContain('width: auto;');
    expect(css).toContain('&.btn-group,');
    expect(css).toContain('& .btn-group {');
    expect(css).toContain('> .btn:not(:first-child):not(:last-child):not(.dropdown-toggle) {');
    expect(css).toContain('border-radius: 0;');
    expect(css).toContain('&.btn-group,');
    expect(css).toContain('& .btn-group {');
    expect(css).toContain('> .btn:first-child {');
    expect(css).toContain('margin-left: 0;');
    expect(css).toContain('&:not(:last-child):not(.dropdown-toggle) {');
    expect(css).toContain('border-bottom-right-radius: 0;');
    expect(css).toContain('border-top-right-radius: 0;');
    expect(css).toContain('/* Need .dropdown-toggle since :last-child does not apply given a .dropdown-menu immediately after it */');
    expect(css).toContain('&.btn-group > .btn:last-child:not(:first-child),');
    expect(css).toContain('& .btn-group > .btn:last-child:not(:first-child),');
    expect(css).toContain('&.btn-group > .dropdown-toggle:not(:first-child),');
    expect(css).toContain('& .btn-group > .dropdown-toggle:not(:first-child) {');
    expect(css).toContain('border-bottom-left-radius: 0;');
    expect(css).toContain('border-top-left-radius: 0;');
    expect(css).toContain('&.btn-group > .btn-group,');
    expect(css).toContain('& .btn-group > .btn-group {');
    expect(css).toContain('float: left;');
    expect(css).toContain('&.btn-group > .btn-group:not(:first-child):not(:last-child) > .btn,');
    expect(css).toContain('& .btn-group > .btn-group:not(:first-child):not(:last-child) > .btn {');
    expect(css).toContain('border-radius: 0;');
    expect(css).toContain('&.btn-group > .btn-group:first-child:not(:last-child),');
    expect(css).toContain('& .btn-group > .btn-group:first-child:not(:last-child) {');
    expect(css).toContain('> .btn:last-child,');
    expect(css).toContain('> .dropdown-toggle {');
    expect(css).toContain('border-bottom-right-radius: 0;');
    expect(css).toContain('border-top-right-radius: 0;');
    expect(css).toContain('&.btn-group > .btn-group:last-child:not(:first-child) > .btn:first-child,');
    expect(css).toContain('& .btn-group > .btn-group:last-child:not(:first-child) > .btn:first-child {');
    expect(css).toContain('border-bottom-left-radius: 0;');
    expect(css).toContain('border-top-left-radius: 0;');
    expect(css).toContain('/* On active and open, do not show outline */');
    expect(css).toContain('&.btn-group .dropdown-toggle:active,');
    expect(css).toContain('& .btn-group .dropdown-toggle:active,');
    expect(css).toContain('&.btn-group.open .dropdown-toggle,');
    expect(css).toContain('& .btn-group.open .dropdown-toggle {');
    expect(css).toContain('outline: 0;');
    expect(css).toContain('&.btn-group-sm > .btn,');
    expect(css).toContain('& .btn-group-sm > .btn { ');
    expect(css).toContain('padding: .25rem .5rem;');
    expect(css).toContain('font-size: .875rem;');
    expect(css).toContain('border-radius: .2rem;');
    expect(css).toContain('&.btn-group-lg > .btn,');
    expect(css).toContain('& .btn-group-lg > .btn {');
    expect(css).toContain('padding: .75rem 1.5rem;');
    expect(css).toContain('font-size: 1.25rem;');
    expect(css).toContain('border-radius: .3rem;');
    expect(css).toContain('& .btn + .dropdown-toggle-split {');
    expect(css).toContain('padding-right: 0.75rem;');
    expect(css).toContain('padding-left: 0.75rem;');
    expect(css).toContain('&::after {');
    expect(css).toContain('margin-left: 0;');
    expect(css).toContain('& .btn-sm + .dropdown-toggle-split {');
    expect(css).toContain('padding-right: 0.375rem;');
    expect(css).toContain('padding-left: 0.375rem;');
    expect(css).toContain('& .btn-lg + .dropdown-toggle-split {');
    expect(css).toContain('padding-right: 1.125rem;');
    expect(css).toContain('padding-left: 1.125rem;');
    expect(css).toContain('&.btn-group.open .dropdown-toggle {');
    expect(css).toContain('box-shadow: inset 0 3px 5px rgba(0,0,0,.125);');
    expect(css).toContain('&.btn-link {');
    expect(css).toContain('box-shadow: none;');
    expect(css).toContain('&.btn-group-vertical,');
    expect(css).toContain('& .btn-group-vertical {');
    expect(css).toContain('display: inline-flex;');
    expect(css).toContain('flex-direction: column;');
    expect(css).toContain('align-items: flex-start;');
    expect(css).toContain('justify-content: center;');
    expect(css).toContain('.btn,');
    expect(css).toContain('.btn-group {');
    expect(css).toContain('width: 100%;');
    expect(css).toContain('> .btn + .btn,');
    expect(css).toContain('> .btn + .btn-group,');
    expect(css).toContain('> .btn-group + .btn,');
    expect(css).toContain('> .btn-group + .btn-group {');
    expect(css).toContain('margin-top: -1px;');
    expect(css).toContain('margin-left: 0;');
    expect(css).toContain('&.btn-group-vertical > .btn,');
    expect(css).toContain('& .btn-group-vertical > .btn {');
    expect(css).toContain('&:not(:first-child):not(:last-child) {');
    expect(css).toContain('border-radius: 0;');
    expect(css).toContain('&:first-child:not(:last-child) {');
    expect(css).toContain('border-bottom-right-radius: 0;');
    expect(css).toContain('border-bottom-left-radius: 0;');
    expect(css).toContain('&:last-child:not(:first-child) {');
    expect(css).toContain('border-top-right-radius: 0;');
    expect(css).toContain('border-top-left-radius: 0;');
    expect(css).toContain('&.btn-group-vertical > .btn-group:not(:first-child):not(:last-child) > .btn,');
    expect(css).toContain('& .btn-group-vertical > .btn-group:not(:first-child):not(:last-child) > .btn {');
    expect(css).toContain('border-radius: 0;');
    expect(css).toContain('&.btn-group-vertical > .btn-group:first-child:not(:last-child),');
    expect(css).toContain('& .btn-group-vertical > .btn-group:first-child:not(:last-child) {');
    expect(css).toContain('> .btn:last-child,');
    expect(css).toContain('> .dropdown-toggle {');
    expect(css).toContain('border-bottom-right-radius: 0;');
    expect(css).toContain('border-bottom-left-radius: 0;');
    expect(css).toContain('&.btn-group-vertical > .btn-group:last-child:not(:first-child) > .btn:first-child,');
    expect(css).toContain('& .btn-group-vertical > .btn-group:last-child:not(:first-child) > .btn:first-child {');
    expect(css).toContain('border-top-right-radius: 0;');
    expect(css).toContain('border-top-left-radius: 0;');
    expect(css).toContain('&.btn-group {');
    expect(css).toContain('> .btn,');
    expect(css).toContain('> .btn-group > .btn {');
    expect(css).toContain('input[type="radio"],');
    expect(css).toContain('input[type="checkbox"] {');
    expect(css).toContain('position: absolute;');
    expect(css).toContain('clip: rect(0,0,0,0);');
    expect(css).toContain('pointer-events: none;');
  });
  it('should return a buttonGroup utility css with default props', () => {
    const css = buttonGroup();
    expect(css).toContain('/*  Make the div behave like a button */');
    expect(css).toContain('&.btn-group,');
    expect(css).toContain('& .btn-group,');
    expect(css).toContain('&.btn-group-vertical,');
    expect(css).toContain('& .btn-group-vertical {');
    expect(css).toContain('position: relative;');
    expect(css).toContain('display: inline-flex;');
    expect(css).toContain('vertical-align: middle; /* match .btn alignment given font-size hack above */');
    expect(css).toContain('> .btn {');
    expect(css).toContain('position: relative;');
    expect(css).toContain('flex: 0 1 auto;');
    expect(css).toContain('margin-bottom: 0;');
    expect(css).toContain('/* Bring the "active" button to the front */');
    expect(css).toContain('&:focus,');
    expect(css).toContain('&:active,');
    expect(css).toContain('&.active {');
    expect(css).toContain('z-index: 2;');
    expect(css).toContain('&:hover, &.hover { ');
    expect(css).toContain('z-index: 2;');
    expect(css).toContain('/*  Prevent double borders when buttons are next to each other */');
    expect(css).toContain('&.btn-group,');
    expect(css).toContain('& .btn-group {');
    expect(css).toContain('.btn + .btn,');
    expect(css).toContain('.btn + .btn-group,');
    expect(css).toContain('.btn-group + .btn,');
    expect(css).toContain('.btn-group + .btn-group {');
    expect(css).toContain('margin-left: -1px;');
    expect(css).toContain('/* Optional: Group multiple button groups together for a toolbar */');
    expect(css).toContain('&.btn-toolbar,');
    expect(css).toContain('& .btn-toolbar {');
    expect(css).toContain('display: flex;');
    expect(css).toContain('flex-wrap: wrap;');
    expect(css).toContain('justify-content: flex-start;');
    expect(css).toContain('.input-group {');
    expect(css).toContain('width: auto;');
    expect(css).toContain('&.btn-group,');
    expect(css).toContain('& .btn-group {');
    expect(css).toContain('> .btn:not(:first-child):not(:last-child):not(.dropdown-toggle) {');
    expect(css).toContain('border-radius: 0;');
    expect(css).toContain('/* Set corners individual because sometimes a single button can be in a .btn-group and we need :first-child and :last-child to both match */');
    expect(css).toContain('&.btn-group,');
    expect(css).toContain('& .btn-group {');
    expect(css).toContain('> .btn:first-child {');
    expect(css).toContain('margin-left: 0;');
    expect(css).toContain('&:not(:last-child):not(.dropdown-toggle) {');
    expect(css).toContain('border-bottom-right-radius: 0;');
    expect(css).toContain('border-top-right-radius: 0;');
    expect(css).toContain('/* Need .dropdown-toggle since :last-child does not apply given a .dropdown-menu immediately after it */');
    expect(css).toContain('&.btn-group > .btn:last-child:not(:first-child),');
    expect(css).toContain('& .btn-group > .btn:last-child:not(:first-child),');
    expect(css).toContain('&.btn-group > .dropdown-toggle:not(:first-child),');
    expect(css).toContain('& .btn-group > .dropdown-toggle:not(:first-child) {');
    expect(css).toContain('border-bottom-left-radius: 0;');
    expect(css).toContain('border-top-left-radius: 0;');
    expect(css).toContain('/* Custom edits for including btn-groups within btn-groups (useful for including dropdown buttons within a btn-group) */');
    expect(css).toContain('&.btn-group > .btn-group,');
    expect(css).toContain('& .btn-group > .btn-group {');
    expect(css).toContain('float: left;');
    expect(css).toContain('&.btn-group > .btn-group:not(:first-child):not(:last-child) > .btn,');
    expect(css).toContain('& .btn-group > .btn-group:not(:first-child):not(:last-child) > .btn {');
    expect(css).toContain('border-radius: 0;');
    expect(css).toContain('&.btn-group > .btn-group:first-child:not(:last-child),');
    expect(css).toContain('& .btn-group > .btn-group:first-child:not(:last-child) {');
    expect(css).toContain('> .btn:last-child,');
    expect(css).toContain('> .dropdown-toggle {');
    expect(css).toContain('border-bottom-right-radius: 0;');
    expect(css).toContain('border-top-right-radius: 0;');
    expect(css).toContain('&.btn-group > .btn-group:last-child:not(:first-child) > .btn:first-child,');
    expect(css).toContain('& .btn-group > .btn-group:last-child:not(:first-child) > .btn:first-child {');
    expect(css).toContain('border-bottom-left-radius: 0;');
    expect(css).toContain('border-top-left-radius: 0;');
    expect(css).toContain('/* On active and open, do not show outline */');
    expect(css).toContain('&.btn-group .dropdown-toggle:active,');
    expect(css).toContain('& .btn-group .dropdown-toggle:active,');
    expect(css).toContain('&.btn-group.open .dropdown-toggle,');
    expect(css).toContain('& .btn-group.open .dropdown-toggle {');
    expect(css).toContain('outline: 0;');
    expect(css).toContain('/* ');
    expect(css).toContain('Sizing Remix the default button sizing classes into new ones for easier manipulation.');
    expect(css).toContain('*/');
    expect(css).toContain('&.btn-group-sm > .btn,');
    expect(css).toContain('& .btn-group-sm > .btn { ');
    expect(css).toContain('padding: .25rem .5rem;');
    expect(css).toContain('font-size: .875rem;');
    expect(css).toContain('border-radius: .2rem;');
    expect(css).toContain('&.btn-group-lg > .btn,');
    expect(css).toContain('& .btn-group-lg > .btn {');
    expect(css).toContain('padding: .75rem 1.5rem;');
    expect(css).toContain('font-size: 1.25rem;');
    expect(css).toContain('border-radius: .3rem;');
    expect(css).toContain('/*');
    expect(css).toContain('Split button dropdowns');
    expect(css).toContain('*/');
    expect(css).toContain('& .btn + .dropdown-toggle-split {');
    expect(css).toContain('padding-right: 0.75rem;');
    expect(css).toContain('padding-left: 0.75rem;');
    expect(css).toContain('&::after {');
    expect(css).toContain('margin-left: 0;');
    expect(css).toContain('& .btn-sm + .dropdown-toggle-split {');
    expect(css).toContain('padding-right: 0.375rem;');
    expect(css).toContain('padding-left: 0.375rem;');
    expect(css).toContain('& .btn-lg + .dropdown-toggle-split {');
    expect(css).toContain('padding-right: 1.125rem;');
    expect(css).toContain('padding-left: 1.125rem;');
    expect(css).toContain('/* The clickable button for toggling the menu */');
    expect(css).toContain('/* Remove the gradient and set the same inset shadow as the :active state */');
    expect(css).toContain('&.btn-group.open .dropdown-toggle {');
    expect(css).toContain('box-shadow: inset 0 3px 5px rgba(0,0,0,.125);');
    expect(css).toContain('/* Show no shadow for .btn-link since it has no other button styles. */');
    expect(css).toContain('&.btn-link {');
    expect(css).toContain('box-shadow: none;');
    expect(css).toContain('/*');
    expect(css).toContain('Vertical button groups');
    expect(css).toContain('*/');
    expect(css).toContain('&.btn-group-vertical,');
    expect(css).toContain('& .btn-group-vertical {');
    expect(css).toContain('display: inline-flex;');
    expect(css).toContain('flex-direction: column;');
    expect(css).toContain('align-items: flex-start;');
    expect(css).toContain('justify-content: center;');
    expect(css).toContain('.btn,');
    expect(css).toContain('.btn-group {');
    expect(css).toContain('width: 100%;');
    expect(css).toContain('> .btn + .btn,');
    expect(css).toContain('> .btn + .btn-group,');
    expect(css).toContain('> .btn-group + .btn,');
    expect(css).toContain('> .btn-group + .btn-group {');
    expect(css).toContain('margin-top: -1px;');
    expect(css).toContain('margin-left: 0;');
    expect(css).toContain('&.btn-group-vertical > .btn,');
    expect(css).toContain('& .btn-group-vertical > .btn {');
    expect(css).toContain('&:not(:first-child):not(:last-child) {');
    expect(css).toContain('border-radius: 0;');
    expect(css).toContain('&:first-child:not(:last-child) {');
    expect(css).toContain('border-bottom-right-radius: 0;');
    expect(css).toContain('border-bottom-left-radius: 0;');
    expect(css).toContain('&:last-child:not(:first-child) {');
    expect(css).toContain('border-top-right-radius: 0;');
    expect(css).toContain('border-top-left-radius: 0;');
    expect(css).toContain('&.btn-group-vertical > .btn-group:not(:first-child):not(:last-child) > .btn,');
    expect(css).toContain('& .btn-group-vertical > .btn-group:not(:first-child):not(:last-child) > .btn {');
    expect(css).toContain('border-radius: 0;');
    expect(css).toContain('&.btn-group-vertical > .btn-group:first-child:not(:last-child),');
    expect(css).toContain('& .btn-group-vertical > .btn-group:first-child:not(:last-child) {');
    expect(css).toContain('> .btn:last-child,');
    expect(css).toContain('> .dropdown-toggle {');
    expect(css).toContain('border-bottom-right-radius: 0;');
    expect(css).toContain('border-bottom-left-radius: 0;');
    expect(css).toContain('&.btn-group-vertical > .btn-group:last-child:not(:first-child) > .btn:first-child,');
    expect(css).toContain('& .btn-group-vertical > .btn-group:last-child:not(:first-child) > .btn:first-child {');
    expect(css).toContain('border-top-right-radius: 0;');
    expect(css).toContain('border-top-left-radius: 0;');
    expect(css).toContain('&.btn-group {');
    expect(css).toContain('> .btn,');
    expect(css).toContain('> .btn-group > .btn {');
    expect(css).toContain('input[type="radio"],');
    expect(css).toContain('input[type="checkbox"] {');
    expect(css).toContain('position: absolute;');
    expect(css).toContain('clip: rect(0,0,0,0);');
    expect(css).toContain('pointer-events: none;');
  });
});
